syntax = "proto3";

package spawn.actors;

import "google/protobuf/descriptor.proto";
import "spawn/actors/actor.proto";

message ActorOpts {
  string state_type = 1;
  bool stateful = 2;
  int64 deactivate_timeout = 3;
  int64 snapshot_interval = 4;
  bool sourceable = 5;
  bool strict_events_ordering = 6;
  spawn.actors.EventsRetentionStrategy events_retention_strategy = 7;
  repeated spawn.actors.ProjectionSubject subjects = 8;
  spawn.actors.Kind kind = 9;
}

message ActorViewOption {
  string query = 1;
  string map_to = 2;
  int32 page_size = 3;
}

message AgentActorToolOpts {
  string description = 1;
}

extend google.protobuf.FieldOptions {
  bool actor_id = 9999;
}

extend google.protobuf.FieldOptions {
  bool searchable = 4890129;
}

extend google.protobuf.MethodOptions {
  ActorViewOption view = 4890127;
}

extend google.protobuf.ServiceOptions {
  ActorOpts actor = 4890128;
}

// Agents via MCP protocol
// example:
// message ForecastPayload {
//   string date = 1 [
//     (spawn.actors.agent_arg) = "A date which you want to fetch the forecast",
//     (spawn.actors.agent_required) = true
//   ];
// }
extend google.protobuf.FieldOptions {
  string agent_arg = 4890130;
}

extend google.protobuf.FieldOptions {
  bool agent_required = 4890131;
}

// example:
// service WeatherActor {
//   rpc GetForecast(ForecastPayload) returns (Spawn.Mcp.TextResponse) {
//     option (spawn.actors.agent) = {
//       description = "Get current weather information for a date"
//     };
//   }
// }
extend google.protobuf.ServiceOptions {
  AgentActorToolOpts agent = 4890132;
}