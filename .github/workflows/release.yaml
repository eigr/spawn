name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build and Test OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [25]
        elixir: [1.15]
    env:
      MIX_ENV: prod

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{matrix.elixir}}
          otp-version: ${{matrix.otp}}

      - uses: actions/cache@v4
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v4
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Generate operator manifest
        run: make generate-k8s-manifests

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          includeInvalidCommits: true

      - name: Upload manifest to release
        if: always()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: spawn_operator/spawn_operator/manifest.yaml
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: ${{ steps.changelog.outputs.changes }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Verify Authentication
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push spawn proxy image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./Dockerfile-proxy
          push: true
          tags: ghcr.io/eigr/spawn-proxy:latest,ghcr.io/eigr/spawn-proxy:2.0.0-RC9
          github-token: ${{ secrets.GHCR_PAT }}

      - name: Build and push spawn operator image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-operator
          push: true
          tags: ghcr.io/eigr/spawn-operator:latest,ghcr.io/eigr/spawn-operator:2.0.0-RC9
          github-token: ${{ secrets.GHCR_PAT }}

      - name: Build and push spawn initializer image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile-initializer
          push: true
          tags: ghcr.io/eigr/spawn-initializer:latest,ghcr.io/eigr/spawn-initializer:2.0.0-RC9
          github-token: ${{ secrets.GHCR_PAT }}

      - name: Install Zig
        run: |
          ZIG_VERSION=0.13.0
          wget https://ziglang.org/download/${ZIG_VERSION}/zig-linux-x86_64-${ZIG_VERSION}.tar.xz
          tar -xf zig-linux-x86_64-${ZIG_VERSION}.tar.xz
          sudo mv zig-linux-x86_64-${ZIG_VERSION} /usr/local/zig
          sudo ln -s /usr/local/zig/zig /usr/local/bin/zig

      - name: Verify Zig installation
        run: zig version

      - name: Install 7zip
        run: sudo apt-get update && sudo apt-get install -y p7zip-full

      - name: Generate CLI
        run: make build-cli

      - name: Upload CLI binaries to release
        if: always()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: spawnctl/burrito_out/spawnctl*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: ${{ steps.changelog.outputs.changes }}

      - name: Upload scripts to install binaries
        if: always()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: spawnctl/install.*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          body: ${{ steps.changelog.outputs.changes }}

      - uses: BobAnkh/add-contributors@master
        with:
          BRANCH: "feat/update-contributors"
          PULL_REQUEST: "feat/update-contributors"
          COLUMN_PER_ROW: "6"
          ACCESS_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PATH: "/CONTRIBUTORS.md"
          COMMIT_MESSAGE: "docs(README): update contributors"
